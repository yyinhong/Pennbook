<!DOCTYPE html>
/*The part I enjoy the most is line 600-697 since it is about auto refresh on the frontend without further requiring access to the backend*/

<html lang="en">
<head>
  <title>hompage</title>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/css/bootstrap.min.css">
  <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
  <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/js/bootstrap.min.js"></script>
  <script src="/jquery/jquery-1.11.1.min.js"></script>
  
  <script>
  
  <!-- if typeof(user) != undefined: -->;

   var user =<%- JSON.stringify(user)  %> ;
   //var user = " ";
   var wall_posts = <%- JSON.stringify(posts.wall_posts) %>;
   var owned_posts = <%- JSON.stringify(posts.owned_posts) %>;
   var posts = wall_posts.concat(owned_posts); //post array
   //alert(JSON.stringify(posts));
   
   
   var post_ids=[]  //all post-ids
   
   var compare_user = []; //user array to be compared for each refresh
   var compare_posts = []; //post id array to be compared for each refresh
   
   var all_usernames = [];
   
   var user_interests = <%- JSON.stringify(user_attributes.interests) %>;
   
  
  function generate_id(array) { //take in all existing post ids [1,2,3,4,5].. push(obj.id)
	  	var id = Math.ceil(Math.random()*10);
	  	var idstr = "";
	  	for (var i = 0; i < id; i++) {
	  		idstr += Math.ceil(Math.random()*10)
	  	}
	  	
	  	var id_ch = Math.ceil(Math.random()*10);
	  	for (var i=0; i<id_ch; i++) {
	  		var ranNum = Math.ceil(Math.random()*25);
	  		idstr += (String.fromCharCode(65 + ranNum));
	  	}
	  	
	  	
	  	if (array.includes(id)) {
	  		generate_id(array);
	  	}
	  	
	  	return idstr;
	}
  
  <!--need to render friends, posts, comments-->
  function getNewPost() {
  		var n_p = document.getElementById("post").value;
  		var p_id = generate_id(post_ids);
  		var timestamp = Date.now();
  		
  		alert(n_p);
  		
  		$.ajax({
	  	  method: "POST",
		  url:"/addhomepost",
		  data: {content: n_p, id: p_id, writer:user, owner:"", timestamp: timestamp}, //
		  error: function (e) {
	        alert("failure: " + JSON.stringify(e));
	      },
	      success: function(msg) {
	      	document.getElementById("post").value = "";
	      	//createOnePost(user, n_p, p_id, "", user, ownername);
	      	refreshPosts();
	      	InsertOnePostBefore(user, n_p, p_id, "", user, "", post_ids[0]);
	      	post_ids.unshift(p_id);
	      	//alert("here");
	      }
		  })
		  
  		//document.getElementById("post").value = "";
  		
  }
  
  function comment() {
  		$(document).ready(function(){
	  	$("#comment").click(function(){
	  	$("#com-box").show();
	  	});
	  	
		});
  }
  
  function can_comment() {
  		$(document).ready(function(){
	  	$("#can_comment").click(function(){
	  	$("#com-box").hide();
	  	});
	  	
		});
  }
  
  
  function commentpost(id,commentator) {
	  		alert("comment");
	  		var new_comment = document.getElementById(id +"p").value;
	  		//alert(new_status);
	  		alert(id+"commentcontent");
	  		document.getElementById(id+"commentcontent").innerHTML += "<br>" +commentator + ":" + new_comment + "<br>";
	  		alert(document.getElementById(id+ "commentcontent").innerHTML);
	  		$.ajax({
		  	  method: "POST",
			  url:"/updatestatus",
			  data: {id:id, content: document.getElementById(id+"commentcontent").innerHTML, commentator:commentator}, 
			  error: function (e) {
		        alert("failure: " + JSON.stringify(e));
		      },
		      success: function(msg) {
		      document.getElementById(id+"p").value="";
		      	document.getElementById(id+"com-box").value = "";
		      	//alert(document.getElementById(id+"commentcontent").innerHTML);
		      	$("#" +id+"com-box").hide();
		      	
		      }
			  })
			  
			//document.getElementById(id+"com-stat").value = "";
			//$("#status-box").hide();
	  }

  
  function searchbar_content() {
  		
  		var text = document.getElementById("searchbar").value;
  		alert(text);
  		$.ajax({
	  	  method: "POST",
		  url:"/search",
		  data: {content: text},
		  error: function (e) {
	        alert("failure: " + JSON.stringify(e));
	        alert("");
	      },
	      success: function(msg) {
	      	alert(JSON.stringify(msg));
	      	document.getElementById("searchbar").value = "";
	      }
		  })
		  
		  window.location="/wall/"+text;
		  
  }
  
  <!-- check if two id arrays are equal-->
  function array_equal(a, b) {
  		return a.sort().toString() == b.sort().toString();
  }
  
  
  
  
  <!-- auto-complete search -->
  
  </script>
  
  
  
  <style>    
    /* Set black background color, white text and some padding */
    footer {
      background-color: #555;
      color: white;
      padding: 15px;
    }
    
    .navbar-custom { 
            background-color: lightblue; 
        }
    
    .com-box {
    	display:none;
    }
    
    .pos {
    	background-color:#FFFFFF;
    	border-radius: 5px
    }
	
	.old-comment {
		background-color:#EBEBEB;
	}
	
	.navbar-right {
		position: relative;
		display: inline-block;
	}
	
	.autocomplete-items {
	  position: absolute;
	  border: 1px solid #d4d4d4;
	  border-bottom: none;
	  border-top: none;
	  z-index: 99;
	  /*position the autocomplete items to be the same width as the container:*/
	  top: 100%;
	  left: 0;
	  right: 0;
	  background-color: #FFFFFF; 
	}
	​
	.autocomplete-items div {
	  padding: 10px;
	  cursor: pointer;
	  background-color: #FFFFFF; 
	  border-bottom: 1px solid #d4d4d4; 
	}
	​
	/*when hovering an item:*/
	.autocomplete-items div:hover {
	  background-color: #e9e9e9; 
	}
	
	.autocomplete-active {
	  background-color: #EBEBEB; 
	}
	
	.pa {
		position:relative;
		top:0
	}
	

  </style>
</head>
<body>
<!-- will get the list of current friends, -->
<nav class="navbar navbar-custom navbar-fixed-top">
  <div class="container-fluid">
    <div class="navbar-header">
      <button type="button" class="navbar-toggle" data-toggle="collapse" data-target="#myNavbar">
        <span class="icon-bar"></span>
        <span class="icon-bar"></span>
        <span class="icon-bar"></span>                        
      </button>
      <a class="navbar-brand" href="#">PB</a>
    </div>
    <div class="collapse navbar-collapse" id="myNavbar">
      <ul class="nav navbar-nav">
        <li class="active"><a href="#">Home</a></li>
        <li><a href="/chatmain">Messages</a></li>
        <li><a href="/news">News</a></li>
        <li><a href="/visualizer">visualizer</a></li>
      </ul>
      <form class="navbar-form navbar-right" role="search">
        <div class="form-group input-group">
          <input type="text" id="searchbar" class="form-control" placeholder="Search.." autocomplete="off">
          <span class="input-group-btn">
            <button class="btn btn-default" type="button" id="searchBTN" onclick=searchbar_content()>
              <span class="glyphicon glyphicon-search"></span>
            </button>
          </span>        
        </div>
      </form>
      <ul class="nav navbar-nav navbar-right">
      	<% var user_wall = "/wall/"+ user%>
        <li><a href=<%=user_wall%>><span class="glyphicon glyphicon-user"></span> My Account</a></li>
      </ul>
    </div>
  </div>
</nav>

<script>
	var entersearch = document.getElementById("searchbar");
	//entersearch.addEventListener("keyup", function(event) {
		//if (event.key == "enter") {
			//event.preventDefault();
			//alert("enter");
			//document.getElementById("searchBTN").click();
		//}
	//})
	
	//alert(document.getElementById("searchbar"));
	
	function autocomplete(inp, arr) {
	  /*the autocomplete function takes two arguments,
	  the text field element and an array of possible autocompleted values:*/
	  var currentFocus;
	  /*execute a function when someone writes in the text field:*/
	  inp.addEventListener("input", function(e) {
	      var a, b, i, val = this.value;
	      /*close any already open lists of autocompleted values*/
	      closeAllLists();
	      if (!val) { return false;}
	      currentFocus = -1;
	      /*create a DIV element that will contain the items (values):*/
	      a = document.createElement("DIV");
	      a.setAttribute("id", this.id + "autocomplete-list");
	      a.setAttribute("class", "autocomplete-items");
	      /*append the DIV element as a child of the autocomplete container:*/
	      this.parentNode.appendChild(a);
	      /*for each item in the array...*/
	      for (i = 0; i < arr.length; i++) {
	        /*check if the item starts with the same letters as the text field value:*/
	        if (arr[i].substr(0, val.length).toUpperCase() == val.toUpperCase()) {
	          /*create a DIV element for each matching element:*/
	          b = document.createElement("DIV");
	          /*make the matching letters bold:*/
	          b.innerHTML = "<strong>" + arr[i].substr(0, val.length) + "</strong>";
	          b.innerHTML += arr[i].substr(val.length);
	          /*insert a input field that will hold the current array item's value:*/
	          b.innerHTML += "<input type='hidden' value='" + arr[i] + "'>";
	          /*execute a function when someone clicks on the item value (DIV element):*/
	          b.addEventListener("click", function(e) {
	              /*insert the value for the autocomplete text field:*/
	              inp.value = this.getElementsByTagName("input")[0].value;
	              /*close the list of autocompleted values,
	              (or any other open lists of autocompleted values:*/
	              closeAllLists();
	          });
	          a.appendChild(b);
	        }
	      }
	  });
	  /*execute a function presses a key on the keyboard:*/
	  inp.addEventListener("keydown", function(e) {
	      var x = document.getElementById(this.id + "autocomplete-list");
	      if (x) x = x.getElementsByTagName("div");
	      if (e.keyCode == 40) {
	        /*If the arrow DOWN key is pressed,
	        increase the currentFocus variable:*/
	        currentFocus++;
	        /*and and make the current item more visible:*/
	        addActive(x);
	      } else if (e.keyCode == 38) { //up
	        /*If the arrow UP key is pressed,
	        decrease the currentFocus variable:*/
	        currentFocus--;
	        /*and and make the current item more visible:*/
	        addActive(x);
	      } else if (e.keyCode == 13) {
	        /*If the ENTER key is pressed, prevent the form from being submitted,*/
	        e.preventDefault();
	        if (currentFocus > -1) {
	          /*and simulate a click on the "active" item:*/
	          if (x) x[currentFocus].click();
	        }
	      }
	  });
	  function addActive(x) {
	    /*a function to classify an item as "active":*/
	    if (!x) return false;
	    /*start by removing the "active" class on all items:*/
	    removeActive(x);
	    if (currentFocus >= x.length) currentFocus = 0;
	    if (currentFocus < 0) currentFocus = (x.length - 1);
	    /*add class "autocomplete-active":*/
	    x[currentFocus].classList.add("autocomplete-active");
	  }
	  function removeActive(x) {
	    /*a function to remove the "active" class from all autocomplete items:*/
	    for (var i = 0; i < x.length; i++) {
	      x[i].classList.remove("autocomplete-active");
	    }
	  }
	  function closeAllLists(elmnt) {
	    /*close all autocomplete lists in the document,
	    except the one passed as an argument:*/
	    var x = document.getElementsByClassName("autocomplete-items");
	    for (var i = 0; i < x.length; i++) {
	      if (elmnt != x[i] && elmnt != inp) {
	        x[i].parentNode.removeChild(x[i]);
	      }
	    }
	  }
	  /*execute a function when someone clicks in the document:*/
	  document.addEventListener("click", function (e) {
	      closeAllLists(e.target);
	  });
	}
	
	var all_usernames_in_db = <%- JSON.stringify(all_usernames_in_db) %>;
	var all_names_for_suggestions = [];
	for (i of all_usernames_in_db) {
		all_names_for_suggestions.push(i.username);
	}
	//var user_attr = <%- JSON.stringify(user_attributes) %>
	
	var countries = ["Afghanistan","Albania","Algeria","Andorra","Angola","Anguilla","Antigua & Barbuda","Argentina","Armenia","Aruba","Australia","Austria","Azerbaijan","Bahamas","Bahrain","Bangladesh","Barbados","Belarus","Belgium","Belize","Benin","Bermuda","Bhutan","Bolivia","Bosnia & Herzegovina","Botswana","Brazil","British Virgin Islands","Brunei","Bulgaria","Burkina Faso","Burundi","Cambodia","Cameroon","Canada","Cape Verde","Cayman Islands","Central Arfrican Republic","Chad","Chile","China","Colombia","Congo","Cook Islands","Costa Rica","Cote D Ivoire","Croatia","Cuba","Curacao","Cyprus","Czech Republic","Denmark","Djibouti","Dominica","Dominican Republic","Ecuador","Egypt","El Salvador","Equatorial Guinea",
	"Eritrea","Estonia"];
	
	autocomplete(document.getElementById("searchbar"), countries);
	
	//autocomplete(document.getElementById("searchbar"), all_usernames_for_suggestions);
	//alert(document.getElementById("searchbar"));
	
	

	
	function test(e) {
		alert(e.keyCode);
	}
</script>

<script>
//var user_attr = <%- JSON.stringify(user_attributes) %>
//

function refreshUserAttr() {
	$.ajax({
	  	  url:"/refreshhome",
		  method:"POST",
		  error: function (e) {
	        alert("failure: " + JSON.stringify(e));
	      },
          success: function(curr) {
          	if (JSON.stringify(curr.user_attributes.interests) == JSON.stringify(user_interests)) {
          		return;
          	} else {
          		//alert(JSON.stringify(curr.user_attributes.interests.split(",")));
	          	var curr_userinter = curr.user_attributes.interests.split(",");
	          	alert(document.getElementById("interests_display").innerHTML);
	          	document.getElementById("interests_display").innerHTML = "";
	          	var count = 1;
	          	for (i of curr_userinter) {
	          		alert(i);
	          		if (count % 3 == 0) {
		          		$("#interests_display").append("<span class='label label-default'>" + i + "</span>");
		          		$("#interests_display").append("<br/>");
	          		} else {
	          			$("#interests_display").append("<span class='label label-default'>" + i + "</span> ");
	          			$("#interests_display").append(" ");
	          		}
	          		
	          		count++;
	          	}
	          	user_interests = curr.user_attributes.interests;
	          	alert(document.getElementById("interests_display").innerHTML);
			
			var all_usernames_in_db_now = curr.all_usernames_in_db;
			var all_names_for_suggestions_now = [];
			for (i of all_usernames_in_db_now) {
				all_names_for_suggestions_now.push(i.username);
			}
	          	
	         	autocomplete(document.getElementById("searchbar"), all_names_for_suggestions_now);
			
	          	setTimeout(function(){
					refreshUserAttr(); //this will send request again and again;
				}, 8000);
			}
          	
          }
          });
}

</script>
  
<div class="container text-center" style="overflow-y: scroll; margin-top:70px">    
  
    <div class="col-sm-3 well">
      
      <div class="well">
        <p><a href="/profile"><strong><%= user%></strong></a></p>
      </div>
      <div class="well">
        <p><a href="#"><strong>Interests</strong></a></p>
        <p id = "interests_display">
          <%if (typeof(JSON.stringify(user_attributes)) != undefined) { %>
          	<%for (i of user_attributes.interests.split(",") ) {%>
          		<span class="label label-default"><%-i%></span>
          	<%} %>
          <%} %>
        </p>
      </div>
      
      <div>
      	<p><a href="/logout">log out</a></p>
      </div>

   	  
    </div>
    
    <div class="col-sm-7">
    
      <div class="row">
        <div class="col-sm-12">
          <div class="panel panel-default text-left">
            <div class="panel-body">
              <p contenteditable="true">Status: Feeling Blue</p>
              
            </div>
          </div>
        </div>
      </div>
      
      <div class="row">
        <div class="col-sm-12">
          <div class="panel panel-default text-left">
            <div class="panel-body">
              <form name="post" id="po" onsubmit="return false;">
              	<p style = "font-family:georgia,garamond,serif;font-size:16px;font-style:italic;"> 
              	<strong>Something to share?</strong> </P>
			    <textarea name="newpost" id="post" 
				    class=class="form-control" placeholder="What's on your mind?" rows="4" style="max-width: 90%"></textarea>
			    <br/>
			    <input type="submit" value="post" id="submit" onclick=getNewPost()>
			  </form>  
			   
            </div>
          </div>
        </div>
      </div>
      
     
      
      <div id="all_posts">
      
      <div class="row">
     
        <div class="col-sm-12">
          <div class="well">
          	<p style="text-align:left"> John: </p>
          	<div class="pos">
          	
            <p style="text-align:left; min-width: 90%; margin:0px 10px 10px 10px;"> Just Forgot that I had to mention something about someone to someone about how I forgot something, but now I forgot it. Ahh, forget it! Or wait. I remember.... no I don't.</p>
          	</div>
          	
          	
          	<!-- old comment area -->
          	<div class="old-comment">
          	
            <p style="text-align:left; min-width: 90%; margin:20px;">old comments</p>
          	</div>
          	
          	<!-- write new comment -->
          	<p align="right">
  			<button class="btn btn-primary" id = comment onclick=comment()>comment</button>

          	</p>
          	          	
          	<div class="com-box" id="com-box" style="width:100%;">
          		
		      	<% if (typeof(user) !== 'undefined') {%>
		      		<p class='pr' align="left"> 
		      		<em class='pa'><%= user + ":"%></em>
		      		<br>
		      		
		      		<em></em>
		          	<textarea name="newpost" id="p" 
				    class="com" rows=3"  style="min-width: 95%" placeholder="write your comments.."></textarea>
				    
				    
			    	</p>
			    	<p align="right">
				    <button id = po_comment>post</button> 
				    <button id = can_comment onclick=can_comment()>cancel</button> 
			    	</p>
			    	
		      	<% }%>	
		      	
		    	
		    	
		    </div>
          </div>
        </div>
      </div>
      
      </div>
	
	<script>
	
	function sortObj(list, key) {
		    function compare(a, b) {
		        a = Number(a[key]);
		        b = Number(b[key]);
		        var type = (typeof(a) === 'string' ||
		                    typeof(b) === 'string') ? 'string' : 'number';
		        var result;
		        if (type === 'string') result = b.localeCompare(a);
		        else result = b - a;
		        return result;
		    }
		    return list.sort(compare);
		}
		
		//alert(JSON.stringify(sortObj([{id:{N:1}}, {id:{N:0.5}}], "id")));
		posts = sortObj(posts, "timestamp");
		//alert(JSON.stringify(posts));
		for (var i =0; i < posts.length; i++) {
			post_ids.push(posts[i].postid);
		}
		alert(JSON.stringify(post_ids));
		
		for (p of posts) {
			createOnePost(p.owner, p.content,
	          	p.postid, p.comments, user, p.receiver);
		}
		
		
		
      	function refreshPosts() {
      		$.ajax({
		  	  url:"/refreshhome",
			  method:"POST",
			  error: function (e) {
		        alert("failure: " + JSON.stringify(e));
		      },
	          success: function(curr) {
	          	var curr_wall_posts = curr.posts.wall_posts;
	          	var curr_owned_posts = curr.posts.owned_posts;
	          	var curr_p = curr_wall_posts.concat(curr_owned_posts);
	          	var curr_posts = sortObj(curr_p, "timestamp");
	          	//var posts = sortObj(posts, "timestamp");
	          	var curr_posts_string = JSON.stringify(curr_posts);
	          	var posts_string = JSON.stringify(posts);
	          	//alert(JSON.stringify(posts));
	          	//alert(JSON.stringify(curr_posts));
	          	//alert(curr_posts_string == posts_string);
	          	
	          	if (curr_posts_string !== posts_string) {
	          		var sorted_curr_posts = sortObj(curr_posts, "timestamp");
	          		var curr_ids = [];
	          		var duplicate = [];
	          		
	       			for (p of sorted_curr_posts) {
	       				if (curr_ids.includes(p.postid)) {
	       					//alert("p.postid is " + p.postid);
	       					var ind = sorted_curr_posts.indexOf(p);
	       					duplicate.push(ind);
	       					//sorted_curr_posts.splice(ind, 1);
	       					continue;
	       				}
	       				//alert("p.postid is " + p.postid);
	       				curr_ids.push(p.postid);
	       				
	       			}
	       			
	       			alert("duplicates are: " + JSON.stringify(duplicate));
	       			for (var i = duplicate.length-1; i>=0; i--) {
	       				sorted_curr_posts.splice(i, 1);
	       			}
	       			
	       			
	          		//alert(JSON.stringify(sorted_curr_posts));
	          		//var sorted_posts = sortObj(curr_posts, "timestamp");
	          		//document.getElementById("all_posts").innerHTML="";
	          		for (var i=sorted_curr_posts.length - 1; i>=0; i--) {
	          			//alert(i);
	          			//alert(JSON.stringify(sorted_curr_posts[i].postid));
	          			
	          			
	          			if (i==sorted_curr_posts.length) {
	          				break;
	          			}
	          			
	          			if (post_ids.includes(sorted_curr_posts[i].postid)) {
	          				//alert("included here");
	          				if (document.getElementById(sorted_curr_posts[i].postid+"commentcontent").innerHTML !== sorted_curr_posts[i].comments) {
	          					document.getElementById(sorted_curr_posts[i].postid+"commentcontent").innerHTML=sorted_curr_posts[i].comments;
	          				}
	          				continue; 
	          			} else {
	          			
	          			//post_ids.unshift(sorted_curr_posts[i].postid);
	          			var idafter = sorted_curr_posts[i+1].postid;
	          			
	          			//alert(sorted_curr_posts[i].owner.S + ":" +sorted_curr_posts[i].id.N);
	          			//if (sorted_curr_posts[i].owner.S == ownername || sorted_curr_posts[i].owner.S == ""
	          			//|| sorted_curr_posts[i].owner.S == ownername) { 
	          				//alert(JSON.stringify([sorted_curr_posts[i].owner.S, sorted_curr_posts[i].content.S,
	          				//sorted_curr_posts[i].id.N, sorted_curr_posts[i].comments.S, user, sorted_curr_posts[i].receiver.S]));
	          				
	          				InsertOnePostBefore(sorted_curr_posts[i].owner, sorted_curr_posts[i].content,
	          				sorted_curr_posts[i].postid, sorted_curr_posts[i].comments, user, sorted_curr_posts[i].receiver, idafter);
	          			//}
	          			}
	          		}
	          		
	          		for (var i = 0; i<post_ids.length; i++) {
	          			if (curr_ids.includes(post_ids[i])) {
	          				continue;
	          			} else {
	          				$("#"+post_ids[i]+"row").remove();
	          			}
	          		}
	          		
	          		posts = curr_posts;
	          		post_ids = curr_ids;
	          		alert("this is curr ids: " + JSON.stringify(post_ids));
	          		alert("this is curr ids: " + JSON.stringify(posts));
	          		
	          	}
	          	setTimeout(function(){
					//refreshPosts(); //this will send request again and again;
				}, 10000);
	          }
			  })
      	}
      	
      	function InsertOnePostBefore(writer, post_content, post_id, comments, user, receiver, idafter) {
      		//var post_id = JSON.stringify(post_id);
      		
      		//alert(JSON.stringify(post_id));
      		if (receiver == "") {
      		$("<div class='row' id='"+post_id+"row'><div class='col-sm-12'><div class='well' id =" + post_id + "><p style='text-align:left'>" + writer +": </p></div></div></div>").insertBefore("#" +idafter+"row");
      		$("#" + post_id).append("<div class='pos'><p style='text-align:left; min-width: 90%; margin:0px 10px 10px 10px;'>" + post_content + "</p></div>");
      		$("#" + post_id).append("<div class='old-comment'><p id='"+ post_id +"commentcontent', style='text-align:left; min-width: 90%; margin:20px;'>" +comments+"</p></div>");
      		$("#" + post_id).append("<p align='right'><button class='btn btn-primary' id = '" +post_id +"commentBTN' >comment</button></p>");
      		$("#" + post_id).append("<div class='com-box' id='" + post_id + "com-box' style='width:100%;'><p class='pr' align='left'><em class='pa'>" + user + 
      		":</em><br><em></em><textarea name='newpost' id='" + post_id +
      		"p' class='com' rows=3  style='min-width: 95%' placeholder='write your comments..'></textarea></p><p align='right'>" +
			"<button id = po_comment onclick=commentpost(" + JSON.stringify(post_id) +",'" + user + "')>post</button> <button id = '" + post_id + "can_comment' >cancel</button> </p></div>");
      		} else {
      		$("<div class='row' id='"+post_id+"row'><div class='col-sm-12'><div class='well' id =" + post_id + "><p style='text-align:left'>" + writer + " to " + receiver +": </p></div></div></div>").insertBefore("#" +idafter+"row");
      		$("#" + post_id).append("<div class='pos'><p style='text-align:left; min-width: 90%; margin:0px 10px 10px 10px;'>" + post_content + "</p></div>");
      		$("#" + post_id).append("<div class='old-comment'><p id='"+ post_id +"commentcontent', style='text-align:left; min-width: 90%; margin:20px;'>" +comments+"</p></div>");
      		$("#" + post_id).append("<p align='right'><button class='btn btn-primary' id = '" +post_id +"commentBTN' >comment</button></p>");
      		$("#" + post_id).append("<div class='com-box' id='" + post_id + "com-box' style='width:100%;'><p class='pr' align='left'><em class='pa'>" + user + 
      		":</em><br><em></em><textarea name='newpost' id='" + post_id +
      		"p' class='com' rows=3  style='min-width: 95%' placeholder='write your comments..'></textarea></p><p align='right'>" +
			"<button id = po_comment onclick=commentpost(" + JSON.stringify(post_id) +",'" + user + "')>post</button> <button id = '" + post_id + "can_comment' >cancel</button> </p></div>");
      		
      		
      		}
      		
      		
      		$(document).ready(function(){
		  	$("#" + post_id + "commentBTN").click(function(){
		  	alert("click");
		  	$("#" + post_id +"com-box").show();
		  	});
		  	
		  	$("#" + post_id+ "can_comment").click(function(){
		  	$("#" + post_id +"com-box").hide();
		  	});
	  	
			});
			
			
      	}
      	
      	function createOnePost(writer, post_content, post_id, comments, user, receiver) {
      		//var post_id = JSON.stringify(post_id);
      		
      		//alert(JSON.stringify(post_id));
      		if (receiver == "") {
      		$("#all_posts").append("<div class='row' id='"+post_id+"row'><div class='col-sm-12'><div class='well' id =" + post_id + "><p style='text-align:left'>" + writer +": </p></div></div></div>");
      		$("#" + post_id).append("<div class='pos'><p style='text-align:left; min-width: 90%; margin:0px 10px 10px 10px;'>" + post_content + "</p></div>");
      		$("#" + post_id).append("<div class='old-comment'><p id='"+ post_id +"commentcontent', style='text-align:left; min-width: 90%; margin:20px;'>" +comments+"</p></div>");
      		$("#" + post_id).append("<p align='right'><button class='btn btn-primary' id = '" +post_id +"commentBTN' >comment</button></p>");
      		$("#" + post_id).append("<div class='com-box' id='" + post_id + "com-box' style='width:100%;'><p class='pr' align='left'><em class='pa'>" + user + 
      		":</em><br><em></em><textarea name='newpost' id='" + post_id +
      		"p' class='com' rows=3  style='min-width: 95%' placeholder='write your comments..'></textarea></p><p align='right'>" +
			"<button id = po_comment onclick=commentpost(" + JSON.stringify(post_id) +",'" + user + "')>post</button> <button id = '" + post_id + "can_comment' >cancel</button> </p></div>");
      		} else {
      		$("#all_posts").append("<div class='row' id='"+post_id+"row'><div class='col-sm-12'><div class='well' id =" + post_id + "><p style='text-align:left'>" + writer + " to " + receiver +": </p></div></div></div>");
      		$("#" + post_id).append("<div class='pos'><p style='text-align:left; min-width: 90%; margin:0px 10px 10px 10px;'>" + post_content + "</p></div>");
      		$("#" + post_id).append("<div class='old-comment'><p id='"+ post_id +"commentcontent', style='text-align:left; min-width: 90%; margin:20px;'>" +comments+"</p></div>");
      		$("#" + post_id).append("<p align='right'><button class='btn btn-primary' id = '" +post_id +"commentBTN' >comment</button></p>");
      		$("#" + post_id).append("<div class='com-box' id='" + post_id + "com-box' style='width:100%;'><p class='pr' align='left'><em class='pa'>" + user + 
      		":</em><br><em></em><textarea name='newpost' id='" + post_id +
      		"p' class='com' rows=3  style='min-width: 95%' placeholder='write your comments..'></textarea></p><p align='right'>" +
			"<button id = po_comment onclick=commentpost(" + JSON.stringify(post_id) +",'" + user + "')>post</button> <button id = '" + post_id + "can_comment' >cancel</button> </p></div>");
      		
      		
      		}
      		
      		
      		$(document).ready(function(){
		  	$("#" + post_id + "commentBTN").click(function(){
		  	alert(document.getElementById(post_id +"com-box").innerHTML);
		  	$("#" + post_id +"com-box").show();
		  	});
		  	
		  	$("#" + post_id+ "can_comment").click(function(){
		  	$("#" + post_id +"com-box").hide();
		  	});
	  	
			});
			
			
      	}
      	
      	//var user =<%- JSON.stringify(user)  %> 
      	//alert("user" + user);
      	//createOnePost("a", "hello", 10, "new com", user, "");
      	//createOnePost("c", "hello world", 9, "sth", user, "b");
      	//alert(document.getElementById(10));
      	//createOnePost("d","hel", "89asa","another com","b","b");
      	//$("#5.5").append("bug");
      	//$("#9").append("bug");
      	//alert(JSON.stringify(document.getElementById("89asa").innerHTML));
      	
      	//refreshPosts();
      	
      	
      	
      	//while(true) {
      		setTimeout(function(){
				//alert("refresh");
					//refreshPosts(); //this will send request again and again;
			}, 15000);
      	//}
      	
      	InsertOnePostBefore("d","hel", "89asa","another com","b","best", "2");
	
	</script>
	

	
	
	<script>
	
	  var compare_user_on=[];
	  var compare_user_off=[];
	  var friends =<%- JSON.stringify(friends)  %> //old-array
	  
	  for (var i=0; i<friends.length; i++) {
	  		if (friends[i].isOnline) {
	  			compare_user_on.push(friends[i].username);
	  		} else {
				compare_user_off.push(friends[i].username);
			}
		}
		
		//alert("on: " + JSON.stringify(compare_user_on));
	    //alert("off: " + JSON.stringify(compare_user_off));
	  
	  
		<!-- automatically refresh friends -->
	  function refreshFriends() {
	  		$.ajax({
			url:"/refreshhome",
			method:"POST",
	        success: function(curr) {
	        	var friends = curr.friends;
	        	//alert("success");
				var current_compare_user_on = [];
				var current_compare_user_off = [];
				
	        	for (var i=0; i<friends.length; i++) {
	        		if (friends[i].isOnline) {
			  			current_compare_user_on.push(friends[i].username);
			  		} else {
						current_compare_user_off.push(friends[i].username);
					}
	        		
	        	}
	        	
	        	//alert("curron: " + JSON.stringify(current_compare_user_on));
	        	//alert("curroff: " + JSON.stringify(current_compare_user_off));
	        	
	        	compare_on_arrays(compare_user_on, current_compare_user_on);
	        	compare_off_arrays(compare_user_off, current_compare_user_off);
	        	
	        		setTimeout(function(){
					//alert("refresh");
				    refreshFriends(); //this will send request again and again;
					}, 5000);
	    	
	        }
	        
	         
	        });
	  }
	  
	  function compare_on_arrays(old_array, current_array) {
	  		//alert("on");
	  		for (var i = 0; i < current_array.length; i++) {
	  			if (old_array.includes(current_array[i])) {
	  				continue;
	  			} else {
	  				old_array.push(current_array[i]);
	  				addOneFriend(current_array[i], true);
	  			}
	  		}
	  		
	  		for (var i=0; i<old_array.length; i++) { 
	    		if (current_array.includes(old_array[i])) {
	    			continue;
	    		} else { //removed items
	    			var rem = old_array[i];
	    			//alert("remon:" +rem);
	    			old_array.splice(i, 1);
	    			document.getElementById("online").removeChild(document.getElementById(rem));
	    		}
	    	}
	  }
	  
	    function compare_off_arrays(old_array, current_array) {
	    	//alert("off");
	  		for (var i = 0; i < current_array.length; i++) {
	  			if (old_array.includes(current_array[i])) {
	  				continue;
	  			} else {
	  				old_array.push(current_array[i]);
	  				addOneFriend(current_array[i], false);
	  			}
	  		}
	  		
	  		for (var i=0; i<old_array.length; i++) { 
	    		if (current_array.includes(old_array[i])) {
	    			continue;
	    		} else { //removed items
	    			var rem = old_array[i];
	    			old_array.splice(i, 1);
	    			document.getElementById("offline").removeChild(document.getElementById(rem));
	    		}
	    	}
	  }
	  
	  function addOneFriend(friend, on) {
	  		//alert(JSON.stringify(friend));
	  		var personal_link = "/wall/" + friend;
	  		var add = document.createElement("P");
	  		var link=document.createElement("a"); 
	    	link.href= personal_link;
	    	link.innerHTML=friend;
	    	add.id=friend;
	  		add.appendChild(link);
	  		
	  		if(on) {
	  			document.getElementById("online").appendChild(add);
	  		} else {
				document.getElementById("offline").appendChild(add);
	  		}
	  }
	  
	  refreshUserAttr();
	  //alert(document.getElementById("a"));
	  setTimeout(function(){
		//alert("refresh");
		refreshFriends(); //this will send request again and again;
		}, 5000);
	  //refreshFriends();
	
	        	
	
	</script>
	
	
	<script>
      
      function addNewFriend() {
      		var newFriend = document.getElementById("addfriend").value;
      		$.ajax({
				url:"/addfriend",
				method:"POST",
				data:{content:newFriend},
		        success: function(message) {
		        	  	alert(message);
		        }
		        
	        });
      		
      }
      
      function removeFriend() {
      		var toremove = document.getElementById("removefriend").value;
      		$.ajax({
				url:"/removefriend",
				method:"POST",
				data:{content:toremove},
		        success: function(message) {
		        	if(message != "") {
		        	  	alert(message);
		        	}
		        }
		        
	        });
      }
      
      </script>
    
    </div>
    
    <div class="col-sm-2 well">
      <div class="thumbnail" id=online> <!-- showing current friends-->
        <p>See who is online</p>
        <% if (typeof(friends) !== 'undefined') {%>
	        <% for(var i=0; i<friends.length; i++) {%>
	        	<% if (friends[i].isOnline == true) {%>  <!-- if the user is online -->
	        	<p id=<%= friends[i].username%>>
	        		<% var personal_link = "/wall/" + friends[i].username %>
	        		<a href= <%=personal_link%>> <%= friends[i].username%> </a>
	        	</p>
	        	<% } %>
	        <% } %>
        <% } %>

      </div> 
      <div class="thumbnail" id=offline> <!-- showing current friends-->
        <% if (typeof(friends) !== 'undefined') {%>
	        <% for(var i=0; i<friends.length; i++) {%>
	        	<% if (friends[i].isOnline == false) {%>  <!-- if the user is online -->
	        	<p id=<%= friends[i].username%>>
	        		<% var personal_link2 = "/wall/" + friends[i].username %>
	        		<a href= <%=personal_link2%>> <%= friends[i].username%> </a>
	        	</p>
	        	<% } %>
	        <% } %>
        <% } %>

        
      </div>     
      <div class="well"> <!-- add friends -->
      	<p>Add New Friends</p>
      	<input type="text" id="addfriend" class="form-control" placeholder="" autocomplete="off">
      	<input type="button" value="add" onclick=addNewFriend()>
        
      </div>
      <div class="well"> <!-- remove friends -->
        <p>Sad...remove if you need to</p>
        <input type="text" id="removefriend" class="form-control" placeholder="" autocomplete="off">
        <input type="button" value="remove">
      </div>
    </div>
  
</div>



</body>
</html>
